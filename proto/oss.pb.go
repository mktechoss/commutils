// Code generated by protoc-gen-go. DO NOT EDIT.
// source: oss.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 生成认证token请求
type GenAuthTokenReq struct {
	Brand            *string `protobuf:"bytes,1,req,name=Brand" json:"Brand,omitempty"`
	UUID             *string `protobuf:"bytes,2,req,name=UUID" json:"UUID,omitempty"`
	Type             *uint32 `protobuf:"varint,3,opt,name=Type" json:"Type,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GenAuthTokenReq) Reset()                    { *m = GenAuthTokenReq{} }
func (m *GenAuthTokenReq) String() string            { return proto1.CompactTextString(m) }
func (*GenAuthTokenReq) ProtoMessage()               {}
func (*GenAuthTokenReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *GenAuthTokenReq) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *GenAuthTokenReq) GetUUID() string {
	if m != nil && m.UUID != nil {
		return *m.UUID
	}
	return ""
}

func (m *GenAuthTokenReq) GetType() uint32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

// 生成认证token响应
type GenAuthTokenRsp struct {
	Token            *string `protobuf:"bytes,1,req,name=Token" json:"Token,omitempty"`
	Code             *int32  `protobuf:"varint,2,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GenAuthTokenRsp) Reset()                    { *m = GenAuthTokenRsp{} }
func (m *GenAuthTokenRsp) String() string            { return proto1.CompactTextString(m) }
func (*GenAuthTokenRsp) ProtoMessage()               {}
func (*GenAuthTokenRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *GenAuthTokenRsp) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *GenAuthTokenRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// token认证请求
type ValidAuthReq struct {
	Token            *string `protobuf:"bytes,1,req,name=Token" json:"Token,omitempty"`
	UUID             *string `protobuf:"bytes,2,req,name=UUID" json:"UUID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ValidAuthReq) Reset()                    { *m = ValidAuthReq{} }
func (m *ValidAuthReq) String() string            { return proto1.CompactTextString(m) }
func (*ValidAuthReq) ProtoMessage()               {}
func (*ValidAuthReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *ValidAuthReq) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *ValidAuthReq) GetUUID() string {
	if m != nil && m.UUID != nil {
		return *m.UUID
	}
	return ""
}

// token认证响应
type ValidAuthRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ValidAuthRsp) Reset()                    { *m = ValidAuthRsp{} }
func (m *ValidAuthRsp) String() string            { return proto1.CompactTextString(m) }
func (*ValidAuthRsp) ProtoMessage()               {}
func (*ValidAuthRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *ValidAuthRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 设置报警事件请求
type SetEventsReq struct {
	ReportDevID      *string `protobuf:"bytes,1,req,name=ReportDevID" json:"ReportDevID,omitempty"`
	EventID          *string `protobuf:"bytes,2,req,name=EventID" json:"EventID,omitempty"`
	EventTime        *string `protobuf:"bytes,3,req,name=EventTime" json:"EventTime,omitempty"`
	LinkDevID        *string `protobuf:"bytes,4,opt,name=LinkDevID" json:"LinkDevID,omitempty"`
	EventType        *uint32 `protobuf:"varint,5,opt,name=EventType" json:"EventType,omitempty"`
	RecordStartTime  *string `protobuf:"bytes,6,opt,name=RecordStartTime" json:"RecordStartTime,omitempty"`
	EventTimeout     *uint32 `protobuf:"varint,7,opt,name=EventTimeout" json:"EventTimeout,omitempty"`
	EventDetail      *string `protobuf:"bytes,8,opt,name=EventDetail" json:"EventDetail,omitempty"`
	Duration         *uint32 `protobuf:"varint,9,opt,name=Duration" json:"Duration,omitempty"`
	FileName         *string `protobuf:"bytes,10,opt,name=FileName" json:"FileName,omitempty"`
	RtmpUrl          *string `protobuf:"bytes,11,opt,name=RtmpUrl" json:"RtmpUrl,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetEventsReq) Reset()                    { *m = SetEventsReq{} }
func (m *SetEventsReq) String() string            { return proto1.CompactTextString(m) }
func (*SetEventsReq) ProtoMessage()               {}
func (*SetEventsReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *SetEventsReq) GetReportDevID() string {
	if m != nil && m.ReportDevID != nil {
		return *m.ReportDevID
	}
	return ""
}

func (m *SetEventsReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

func (m *SetEventsReq) GetEventTime() string {
	if m != nil && m.EventTime != nil {
		return *m.EventTime
	}
	return ""
}

func (m *SetEventsReq) GetLinkDevID() string {
	if m != nil && m.LinkDevID != nil {
		return *m.LinkDevID
	}
	return ""
}

func (m *SetEventsReq) GetEventType() uint32 {
	if m != nil && m.EventType != nil {
		return *m.EventType
	}
	return 0
}

func (m *SetEventsReq) GetRecordStartTime() string {
	if m != nil && m.RecordStartTime != nil {
		return *m.RecordStartTime
	}
	return ""
}

func (m *SetEventsReq) GetEventTimeout() uint32 {
	if m != nil && m.EventTimeout != nil {
		return *m.EventTimeout
	}
	return 0
}

func (m *SetEventsReq) GetEventDetail() string {
	if m != nil && m.EventDetail != nil {
		return *m.EventDetail
	}
	return ""
}

func (m *SetEventsReq) GetDuration() uint32 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *SetEventsReq) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

func (m *SetEventsReq) GetRtmpUrl() string {
	if m != nil && m.RtmpUrl != nil {
		return *m.RtmpUrl
	}
	return ""
}

// 设置报警事件响应
type SetEventsRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetEventsRsp) Reset()                    { *m = SetEventsRsp{} }
func (m *SetEventsRsp) String() string            { return proto1.CompactTextString(m) }
func (*SetEventsRsp) ProtoMessage()               {}
func (*SetEventsRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *SetEventsRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 获取报警事件
type GetEventsReq struct {
	ReportDevID      *string `protobuf:"bytes,1,req,name=ReportDevID" json:"ReportDevID,omitempty"`
	EventId          *string `protobuf:"bytes,2,opt,name=EventId" json:"EventId,omitempty"`
	StartTime        *string `protobuf:"bytes,3,opt,name=StartTime" json:"StartTime,omitempty"`
	Page             *uint32 `protobuf:"varint,4,opt,name=page" json:"page,omitempty"`
	Limit            *uint32 `protobuf:"varint,5,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetEventsReq) Reset()                    { *m = GetEventsReq{} }
func (m *GetEventsReq) String() string            { return proto1.CompactTextString(m) }
func (*GetEventsReq) ProtoMessage()               {}
func (*GetEventsReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *GetEventsReq) GetReportDevID() string {
	if m != nil && m.ReportDevID != nil {
		return *m.ReportDevID
	}
	return ""
}

func (m *GetEventsReq) GetEventId() string {
	if m != nil && m.EventId != nil {
		return *m.EventId
	}
	return ""
}

func (m *GetEventsReq) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *GetEventsReq) GetPage() uint32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *GetEventsReq) GetLimit() uint32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type GetEventsRsp struct {
	Jsonrsp          *string `protobuf:"bytes,1,req,name=jsonrsp" json:"jsonrsp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetEventsRsp) Reset()                    { *m = GetEventsRsp{} }
func (m *GetEventsRsp) String() string            { return proto1.CompactTextString(m) }
func (*GetEventsRsp) ProtoMessage()               {}
func (*GetEventsRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{7} }

func (m *GetEventsRsp) GetJsonrsp() string {
	if m != nil && m.Jsonrsp != nil {
		return *m.Jsonrsp
	}
	return ""
}

// 删除报警事件请求
type DelEventsReq struct {
	ReportDevID      *string `protobuf:"bytes,1,req,name=ReportDevID" json:"ReportDevID,omitempty"`
	StartTime        *string `protobuf:"bytes,2,opt,name=StartTime" json:"StartTime,omitempty"`
	EndTime          *string `protobuf:"bytes,3,opt,name=EndTime" json:"EndTime,omitempty"`
	EventID          *string `protobuf:"bytes,4,opt,name=EventID" json:"EventID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DelEventsReq) Reset()                    { *m = DelEventsReq{} }
func (m *DelEventsReq) String() string            { return proto1.CompactTextString(m) }
func (*DelEventsReq) ProtoMessage()               {}
func (*DelEventsReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{8} }

func (m *DelEventsReq) GetReportDevID() string {
	if m != nil && m.ReportDevID != nil {
		return *m.ReportDevID
	}
	return ""
}

func (m *DelEventsReq) GetStartTime() string {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return ""
}

func (m *DelEventsReq) GetEndTime() string {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return ""
}

func (m *DelEventsReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

// 删除报警事件响应
type DelEventsRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DelEventsRsp) Reset()                    { *m = DelEventsRsp{} }
func (m *DelEventsRsp) String() string            { return proto1.CompactTextString(m) }
func (*DelEventsRsp) ProtoMessage()               {}
func (*DelEventsRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{9} }

func (m *DelEventsRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 更新报警事件请求
type UpdateEventsReq struct {
	EventID          *string `protobuf:"bytes,1,req,name=EventID" json:"EventID,omitempty"`
	EventStatus      *int32  `protobuf:"varint,2,req,name=EventStatus" json:"EventStatus,omitempty"`
	Filename         *string `protobuf:"bytes,3,opt,name=Filename" json:"Filename,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UpdateEventsReq) Reset()                    { *m = UpdateEventsReq{} }
func (m *UpdateEventsReq) String() string            { return proto1.CompactTextString(m) }
func (*UpdateEventsReq) ProtoMessage()               {}
func (*UpdateEventsReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{10} }

func (m *UpdateEventsReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

func (m *UpdateEventsReq) GetEventStatus() int32 {
	if m != nil && m.EventStatus != nil {
		return *m.EventStatus
	}
	return 0
}

func (m *UpdateEventsReq) GetFilename() string {
	if m != nil && m.Filename != nil {
		return *m.Filename
	}
	return ""
}

// 设置报警事件响应
type UpdateEventsRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdateEventsRsp) Reset()                    { *m = UpdateEventsRsp{} }
func (m *UpdateEventsRsp) String() string            { return proto1.CompactTextString(m) }
func (*UpdateEventsRsp) ProtoMessage()               {}
func (*UpdateEventsRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{11} }

func (m *UpdateEventsRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////////////
// 更新报警事件请求
type UpdateEventsRtmpReq struct {
	EventID          *string `protobuf:"bytes,1,req,name=EventID" json:"EventID,omitempty"`
	Rtmp             *string `protobuf:"bytes,2,opt,name=rtmp" json:"rtmp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UpdateEventsRtmpReq) Reset()                    { *m = UpdateEventsRtmpReq{} }
func (m *UpdateEventsRtmpReq) String() string            { return proto1.CompactTextString(m) }
func (*UpdateEventsRtmpReq) ProtoMessage()               {}
func (*UpdateEventsRtmpReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{12} }

func (m *UpdateEventsRtmpReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

func (m *UpdateEventsRtmpReq) GetRtmp() string {
	if m != nil && m.Rtmp != nil {
		return *m.Rtmp
	}
	return ""
}

// 设置报警事件响应
type UpdateEventsRtmpRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *UpdateEventsRtmpRsp) Reset()                    { *m = UpdateEventsRtmpRsp{} }
func (m *UpdateEventsRtmpRsp) String() string            { return proto1.CompactTextString(m) }
func (*UpdateEventsRtmpRsp) ProtoMessage()               {}
func (*UpdateEventsRtmpRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{13} }

func (m *UpdateEventsRtmpRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// /////////////////////////////////////////////////////////////////////////////////////
// RtmpAuth 认证请求
type RtmpAuthReq struct {
	EventID          *string `protobuf:"bytes,1,req,name=EventID" json:"EventID,omitempty"`
	Rtmp             *string `protobuf:"bytes,2,opt,name=rtmp" json:"rtmp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RtmpAuthReq) Reset()                    { *m = RtmpAuthReq{} }
func (m *RtmpAuthReq) String() string            { return proto1.CompactTextString(m) }
func (*RtmpAuthReq) ProtoMessage()               {}
func (*RtmpAuthReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{14} }

func (m *RtmpAuthReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

func (m *RtmpAuthReq) GetRtmp() string {
	if m != nil && m.Rtmp != nil {
		return *m.Rtmp
	}
	return ""
}

// RtmpAuth 认证响应
type RtmpAuthRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RtmpAuthRsp) Reset()                    { *m = RtmpAuthRsp{} }
func (m *RtmpAuthRsp) String() string            { return proto1.CompactTextString(m) }
func (*RtmpAuthRsp) ProtoMessage()               {}
func (*RtmpAuthRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{15} }

func (m *RtmpAuthRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 存储报警事件文件请求
type SetEventsFileReq struct {
	EventID          *string `protobuf:"bytes,1,req,name=EventID" json:"EventID,omitempty"`
	FileData         []byte  `protobuf:"bytes,2,req,name=FileData" json:"FileData,omitempty"`
	FileName         *string `protobuf:"bytes,3,req,name=FileName" json:"FileName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *SetEventsFileReq) Reset()                    { *m = SetEventsFileReq{} }
func (m *SetEventsFileReq) String() string            { return proto1.CompactTextString(m) }
func (*SetEventsFileReq) ProtoMessage()               {}
func (*SetEventsFileReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{16} }

func (m *SetEventsFileReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

func (m *SetEventsFileReq) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

func (m *SetEventsFileReq) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

// 存储报警事件文件响应
type SetEventsFileRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *SetEventsFileRsp) Reset()                    { *m = SetEventsFileRsp{} }
func (m *SetEventsFileRsp) String() string            { return proto1.CompactTextString(m) }
func (*SetEventsFileRsp) ProtoMessage()               {}
func (*SetEventsFileRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{17} }

func (m *SetEventsFileRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 获取报警事件文件请求
type GetEventsFileReq struct {
	FileName         *string `protobuf:"bytes,1,req,name=FileName" json:"FileName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetEventsFileReq) Reset()                    { *m = GetEventsFileReq{} }
func (m *GetEventsFileReq) String() string            { return proto1.CompactTextString(m) }
func (*GetEventsFileReq) ProtoMessage()               {}
func (*GetEventsFileReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{18} }

func (m *GetEventsFileReq) GetFileName() string {
	if m != nil && m.FileName != nil {
		return *m.FileName
	}
	return ""
}

// 获取报警事件文件响应
type GetEventsFileRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	FileData         []byte `protobuf:"bytes,2,opt,name=FileData" json:"FileData,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetEventsFileRsp) Reset()                    { *m = GetEventsFileRsp{} }
func (m *GetEventsFileRsp) String() string            { return proto1.CompactTextString(m) }
func (*GetEventsFileRsp) ProtoMessage()               {}
func (*GetEventsFileRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{19} }

func (m *GetEventsFileRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetEventsFileRsp) GetFileData() []byte {
	if m != nil {
		return m.FileData
	}
	return nil
}

// 删除报警事件文件请求
type DelEventsFileReq struct {
	EventID          *string `protobuf:"bytes,1,req,name=EventID" json:"EventID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DelEventsFileReq) Reset()                    { *m = DelEventsFileReq{} }
func (m *DelEventsFileReq) String() string            { return proto1.CompactTextString(m) }
func (*DelEventsFileReq) ProtoMessage()               {}
func (*DelEventsFileReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{20} }

func (m *DelEventsFileReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

// 删除报警事件文件响应
type DelEventsFileRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *DelEventsFileRsp) Reset()                    { *m = DelEventsFileRsp{} }
func (m *DelEventsFileRsp) String() string            { return proto1.CompactTextString(m) }
func (*DelEventsFileRsp) ProtoMessage()               {}
func (*DelEventsFileRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{21} }

func (m *DelEventsFileRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 转码请求
type TranscodeReq struct {
	EventID          *string `protobuf:"bytes,1,req,name=EventID" json:"EventID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *TranscodeReq) Reset()                    { *m = TranscodeReq{} }
func (m *TranscodeReq) String() string            { return proto1.CompactTextString(m) }
func (*TranscodeReq) ProtoMessage()               {}
func (*TranscodeReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{22} }

func (m *TranscodeReq) GetEventID() string {
	if m != nil && m.EventID != nil {
		return *m.EventID
	}
	return ""
}

// 转码响应
type TranscodeRsp struct {
	Code             *int32 `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *TranscodeRsp) Reset()                    { *m = TranscodeRsp{} }
func (m *TranscodeRsp) String() string            { return proto1.CompactTextString(m) }
func (*TranscodeRsp) ProtoMessage()               {}
func (*TranscodeRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{23} }

func (m *TranscodeRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

// 获取转码任务列表
type GetTranscodeTaskReq struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *GetTranscodeTaskReq) Reset()                    { *m = GetTranscodeTaskReq{} }
func (m *GetTranscodeTaskReq) String() string            { return proto1.CompactTextString(m) }
func (*GetTranscodeTaskReq) ProtoMessage()               {}
func (*GetTranscodeTaskReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{24} }

// 获取转码任务列表响应
type GetTranscodeTaskRsp struct {
	Code             *int32  `protobuf:"varint,1,req,name=code" json:"code,omitempty"`
	Tasks            *string `protobuf:"bytes,2,opt,name=tasks" json:"tasks,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GetTranscodeTaskRsp) Reset()                    { *m = GetTranscodeTaskRsp{} }
func (m *GetTranscodeTaskRsp) String() string            { return proto1.CompactTextString(m) }
func (*GetTranscodeTaskRsp) ProtoMessage()               {}
func (*GetTranscodeTaskRsp) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{25} }

func (m *GetTranscodeTaskRsp) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *GetTranscodeTaskRsp) GetTasks() string {
	if m != nil && m.Tasks != nil {
		return *m.Tasks
	}
	return ""
}

func init() {
	proto1.RegisterType((*GenAuthTokenReq)(nil), "proto.GenAuthTokenReq")
	proto1.RegisterType((*GenAuthTokenRsp)(nil), "proto.GenAuthTokenRsp")
	proto1.RegisterType((*ValidAuthReq)(nil), "proto.ValidAuthReq")
	proto1.RegisterType((*ValidAuthRsp)(nil), "proto.ValidAuthRsp")
	proto1.RegisterType((*SetEventsReq)(nil), "proto.SetEventsReq")
	proto1.RegisterType((*SetEventsRsp)(nil), "proto.SetEventsRsp")
	proto1.RegisterType((*GetEventsReq)(nil), "proto.GetEventsReq")
	proto1.RegisterType((*GetEventsRsp)(nil), "proto.GetEventsRsp")
	proto1.RegisterType((*DelEventsReq)(nil), "proto.DelEventsReq")
	proto1.RegisterType((*DelEventsRsp)(nil), "proto.DelEventsRsp")
	proto1.RegisterType((*UpdateEventsReq)(nil), "proto.UpdateEventsReq")
	proto1.RegisterType((*UpdateEventsRsp)(nil), "proto.UpdateEventsRsp")
	proto1.RegisterType((*UpdateEventsRtmpReq)(nil), "proto.UpdateEventsRtmpReq")
	proto1.RegisterType((*UpdateEventsRtmpRsp)(nil), "proto.UpdateEventsRtmpRsp")
	proto1.RegisterType((*RtmpAuthReq)(nil), "proto.RtmpAuthReq")
	proto1.RegisterType((*RtmpAuthRsp)(nil), "proto.RtmpAuthRsp")
	proto1.RegisterType((*SetEventsFileReq)(nil), "proto.SetEventsFileReq")
	proto1.RegisterType((*SetEventsFileRsp)(nil), "proto.SetEventsFileRsp")
	proto1.RegisterType((*GetEventsFileReq)(nil), "proto.GetEventsFileReq")
	proto1.RegisterType((*GetEventsFileRsp)(nil), "proto.GetEventsFileRsp")
	proto1.RegisterType((*DelEventsFileReq)(nil), "proto.DelEventsFileReq")
	proto1.RegisterType((*DelEventsFileRsp)(nil), "proto.DelEventsFileRsp")
	proto1.RegisterType((*TranscodeReq)(nil), "proto.TranscodeReq")
	proto1.RegisterType((*TranscodeRsp)(nil), "proto.TranscodeRsp")
	proto1.RegisterType((*GetTranscodeTaskReq)(nil), "proto.GetTranscodeTaskReq")
	proto1.RegisterType((*GetTranscodeTaskRsp)(nil), "proto.GetTranscodeTaskRsp")
}

func init() { proto1.RegisterFile("oss.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 610 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x4f, 0x6b, 0xdb, 0x4e,
	0x10, 0x45, 0x8e, 0xfd, 0x4b, 0x3c, 0x51, 0x88, 0xd9, 0xe4, 0x07, 0xa2, 0xf4, 0xe0, 0x2e, 0xb4,
	0xb8, 0x50, 0x72, 0x2e, 0xe4, 0x50, 0x9a, 0xaa, 0x35, 0x81, 0xd2, 0x82, 0x6c, 0xf7, 0xbe, 0x44,
	0x4b, 0xab, 0x5a, 0x7f, 0x36, 0xda, 0x75, 0xa0, 0xd7, 0x7e, 0x84, 0x7e, 0xc8, 0x7e, 0x8e, 0x32,
	0x23, 0x69, 0xb5, 0x12, 0x96, 0x4b, 0x7a, 0xf2, 0xbc, 0xd9, 0x9d, 0x37, 0x6f, 0xde, 0x8e, 0x05,
	0xd3, 0x42, 0xeb, 0x2b, 0x55, 0x16, 0xa6, 0x60, 0x13, 0xfa, 0xe1, 0x9f, 0xe1, 0x7c, 0x29, 0xf3,
	0xb7, 0x3b, 0xf3, 0x6d, 0x5d, 0x6c, 0x65, 0x1e, 0xc9, 0x7b, 0x76, 0x09, 0x93, 0x9b, 0x52, 0xe4,
	0x71, 0xe0, 0xcd, 0x47, 0x8b, 0x69, 0x54, 0x01, 0xc6, 0x60, 0xbc, 0xd9, 0xdc, 0x86, 0xc1, 0x88,
	0x92, 0x14, 0x63, 0x6e, 0xfd, 0x43, 0xc9, 0xe0, 0x68, 0xee, 0x2d, 0xce, 0x22, 0x8a, 0xf9, 0x75,
	0x8f, 0x50, 0x2b, 0x24, 0xa4, 0xb8, 0x21, 0x24, 0x80, 0xc5, 0x77, 0x45, 0x2c, 0x89, 0x70, 0x12,
	0x51, 0xcc, 0x5f, 0x83, 0xff, 0x45, 0xa4, 0x49, 0x8c, 0xe5, 0xb5, 0x94, 0xfd, 0x95, 0x7d, 0x29,
	0x9c, 0xbb, 0x95, 0x5a, 0x59, 0x76, 0xcf, 0x61, 0xff, 0x3d, 0x02, 0x7f, 0x25, 0xcd, 0xfb, 0x07,
	0x99, 0x1b, 0x8d, 0xf4, 0x73, 0x38, 0x8d, 0xa4, 0x2a, 0x4a, 0x13, 0xca, 0x87, 0xdb, 0xb0, 0x6e,
	0xe2, 0xa6, 0x58, 0x00, 0xc7, 0x74, 0xdd, 0x76, 0x6b, 0x20, 0x7b, 0x0a, 0x53, 0x0a, 0xd7, 0x49,
	0x86, 0x06, 0xe0, 0x59, 0x9b, 0xc0, 0xd3, 0x8f, 0x49, 0xbe, 0xad, 0x78, 0xc7, 0x73, 0x0f, 0x4f,
	0x6d, 0xa2, 0xad, 0x45, 0xf3, 0x26, 0x64, 0x5e, 0x9b, 0x60, 0x0b, 0x38, 0x8f, 0xe4, 0x5d, 0x51,
	0xc6, 0x2b, 0x23, 0xca, 0x8a, 0xff, 0x3f, 0x62, 0xe8, 0xa7, 0x19, 0x07, 0xdf, 0xb6, 0x2c, 0x76,
	0x26, 0x38, 0x26, 0xaa, 0x4e, 0x0e, 0x67, 0x24, 0x1c, 0x4a, 0x23, 0x92, 0x34, 0x38, 0x21, 0x26,
	0x37, 0xc5, 0x9e, 0xc0, 0x49, 0xb8, 0x2b, 0x85, 0x49, 0x8a, 0x3c, 0x98, 0x12, 0x83, 0xc5, 0x78,
	0xf6, 0x21, 0x49, 0xe5, 0x27, 0x91, 0xc9, 0x00, 0xa8, 0xd4, 0x62, 0xf4, 0x26, 0x32, 0x99, 0xda,
	0x94, 0x69, 0x70, 0x4a, 0x47, 0x0d, 0xc4, 0xc7, 0x68, 0x7d, 0x1e, 0x78, 0x8c, 0x5f, 0x1e, 0xf8,
	0xcb, 0x7f, 0x7c, 0x8c, 0x38, 0x18, 0x55, 0x0d, 0x6b, 0x88, 0x86, 0xb6, 0x66, 0x1d, 0x55, 0x76,
	0xb7, 0x36, 0x31, 0x18, 0x2b, 0xf1, 0x55, 0xd2, 0x3b, 0x9c, 0x45, 0x14, 0xe3, 0x66, 0xa5, 0x49,
	0x96, 0x98, 0xda, 0xfe, 0x0a, 0xf0, 0x85, 0xab, 0x49, 0x2b, 0xec, 0xf8, 0x5d, 0x17, 0x79, 0xa9,
	0x55, 0xad, 0xa7, 0x81, 0xfc, 0xa7, 0x07, 0x7e, 0x28, 0xd3, 0xc7, 0xc8, 0xef, 0x88, 0x1c, 0xf5,
	0x45, 0xe2, 0x70, 0x79, 0xec, 0x0c, 0xd0, 0x40, 0x77, 0x07, 0xc7, 0xee, 0xd8, 0xb4, 0xf4, 0xad,
	0x86, 0x01, 0x9f, 0x13, 0x38, 0xdf, 0xa8, 0x58, 0x18, 0xd9, 0x4a, 0x75, 0x08, 0xbd, 0xee, 0x52,
	0x37, 0xcb, 0xb2, 0x32, 0xc2, 0xec, 0x74, 0xfd, 0xd7, 0x74, 0x53, 0xcd, 0x42, 0xe4, 0xc2, 0xea,
	0xb4, 0x98, 0x3f, 0xef, 0xb5, 0x1a, 0x50, 0xf4, 0x0e, 0x2e, 0x3a, 0xd7, 0x4c, 0xa6, 0x0e, 0xab,
	0x62, 0x30, 0x2e, 0x4d, 0xa6, 0x6a, 0xcf, 0x28, 0xe6, 0x2f, 0xf7, 0x90, 0x0c, 0xf4, 0xbb, 0x86,
	0x53, 0x3c, 0x6e, 0xbe, 0x29, 0x8f, 0xeb, 0xf3, 0xcc, 0x29, 0x1e, 0xe0, 0x8f, 0x61, 0x66, 0xb7,
	0x1d, 0xbd, 0x38, 0xdc, 0xa4, 0x36, 0x30, 0x14, 0x46, 0x90, 0xbf, 0x7e, 0x64, 0x71, 0xe7, 0xdf,
	0x56, 0x7d, 0x52, 0x2c, 0xe6, 0x2f, 0xfa, 0x5d, 0x06, 0xd4, 0x5c, 0xc1, 0x6c, 0xd9, 0x57, 0xe3,
	0xf2, 0x7a, 0x3d, 0xde, 0x9b, 0xfe, 0xfd, 0xfd, 0xbc, 0x3d, 0xdd, 0x9e, 0xab, 0x9b, 0xbf, 0x82,
	0x99, 0xdd, 0xc3, 0xbf, 0x3a, 0x80, 0x93, 0x74, 0x6f, 0x0f, 0x4c, 0xb2, 0x00, 0x7f, 0x5d, 0x8a,
	0x5c, 0x23, 0x38, 0xcc, 0xc8, 0xdd, 0x9b, 0x03, 0x6c, 0xff, 0xc3, 0xc5, 0x52, 0x1a, 0x7b, 0x6d,
	0x2d, 0xf4, 0x36, 0x92, 0xf7, 0xfc, 0xcd, 0x9e, 0xf4, 0x80, 0x03, 0x97, 0x30, 0x31, 0x42, 0x6f,
	0x75, 0xbd, 0x1f, 0x15, 0xf8, 0x13, 0x00, 0x00, 0xff, 0xff, 0xe8, 0x6d, 0xe1, 0x42, 0x53, 0x07,
	0x00, 0x00,
}
